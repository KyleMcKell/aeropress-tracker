// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 Int      @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              Int         @id @default(autoincrement())
  name            String?
  email           String?     @unique
  emailVerified   DateTime?
  image           String?
  accounts        Account[]
  sessions        Session[]
  aeropressBrews  AeropressBrew[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model AeropressBrew {
  id            Int      @id @default(autoincrement())
  name          String
  brewTime      Int
  waterTemp     Int
  coffeeWeight  Int
  waterWeight   Int
  grindSize     String
  roastType     String
  inverted      Boolean
  favorite      Boolean  @default(false)
  description   String?
  comments      String?
  userId        Int
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([name], name: "brewNameIndex")
}